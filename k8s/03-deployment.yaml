apiVersion: apps/v1
kind: Deployment
metadata:
  name: fasttechfoods-auth
  namespace: fasttechfoods
  labels:
    app: fasttechfoods-auth
    version: v1
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: fasttechfoods-auth
  template:
    metadata:
      labels:
        app: fasttechfoods-auth
        version: v1
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: fasttechfoods-auth-workload-identity-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: fasttechfoods-auth
        image: fasttechfoods.azurecr.io/fasttechfoods-auth:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8081
          protocol: TCP
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:8080"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: fasttechfoods-auth-secrets
              key: JWT_SECRET
        - name: CONNECTION_STRING_DATABASE
          valueFrom:
            secretKeyRef:
              name: fasttechfoods-auth-secrets
              key: CONNECTION_STRING_DATABASE
        volumeMounts:
        - name: config-volume
          mountPath: /app/appsettings.json
          subPath: appsettings.json
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config-volume
        configMap:
          name: fasttechfoods-auth-config
      - name: tmp-volume
        emptyDir: {}
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "fasttechfoods-auth-secrets-provider"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - fasttechfoods-auth
              topologyKey: kubernetes.io/hostname
